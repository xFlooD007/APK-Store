@model rhapsodyLatest.Models.AddApkViewModel

@{
    ViewBag.Title = "UploadAPK";
    Layout = "~/Views/Dashboard/DashboardLayout.cshtml";
}

<h2>UploadAPK</h2>


@using (Html.BeginForm("UploadAPK", "Dashboard", FormMethod.Post, new
            {
                enctype = "multipart/form-data"
            })) 
{
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
    <h4>AddApkViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.APKName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.APKName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.APKName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Developers, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Developers, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Developers, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OfficialWebsites, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OfficialWebsites, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OfficialWebsites, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Image" required />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.APKFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="APKFile" required />
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
